---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litellm-${LITELLM_NAME}
  namespace: crs-webservice
  labels:
    app: litellm-${LITELLM_NAME}
    namespace: crs-webservice
spec:
  replicas: ${LITELLM_REPLICA}
  selector:
    matchLabels:
      app: litellm-${LITELLM_NAME}
  template:
    metadata:
      labels:
        app: litellm-${LITELLM_NAME} 
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - litellm-${LITELLM_NAME}
                topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: registry-secret
      nodeSelector:
        litellm-${LITELLM_NAME}-node: "true"
      volumes:
        - name: tarball-fs-volume
          persistentVolumeClaim:
            claimName: tarball-fs
        - name: crs-db
          persistentVolumeClaim:
            claimName: crs-db-backup
      initContainers:
        - name: wait-db
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z litellm-${LITELLM_NAME}-db 5432; do
                echo "waiting for db..."; sleep 3;
              done
      containers:
        - name: litellm-${LITELLM_NAME}
          image: ${REGISTRY}/litellm:${IMAGE_VERSION}
          ports:
            - name: "http"
              containerPort: 4000
          env:
            - name: LITELLM_MODE
              value: "PRODUCTION"
            - name: LITELLM_LOG
              value: "ERROR"
            - name: DATABASE_URL
              value: "postgresql://litellm_user:supersecurepassword@litellm-${LITELLM_NAME}-db:5432/litellm_db"
            - name: REDIS_HOST
              value: "litellm-${LITELLM_NAME}-redis" # faster than REDIS_URL
            - name: REDIS_PORT
              value: "6379"
            - name: LITELLM_MASTER_KEY
              value: ${LITELLM_MASTER_KEY}
            - name: GEMINI_API_KEY
              value: ${GEMINI_API_KEY}
            - name: OPENAI_API_KEY
              value: ${OPENAI_API_KEY}
            - name: ANTHROPIC_API_KEY
              value: ${ANTHROPIC_API_KEY}
            - name: XAI_API_KEY
              value: ${XAI_API_KEY}
            - name: UI_USERNAME
              value: ${LITELLM_UI_USERNAME}
            - name: UI_PASSWORD
              value: ${LITELLM_UI_PASSWORD}
            - name: LITELLM_REQUEST_TIMEOUT
              value: "600"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://otel:4317
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "grpc"
            - name: PRICING_JSON_FILE_PATH
              value: ${PRICING_JSON_FILE_PATH}
            - name: OTEL_BSP_MAX_EXPORT_BATCH_SIZE
              value: "128"
            - name: LITELLM_LOCAL_MODEL_COST_MAP
              value: "True"
            - name: USE_PRISMA_MIGRATE
              value: "False"
            - name: ANTHROPIC_BUDGET_LIMIT
              value: "${ANTHROPIC_BUDGET_LIMIT}"
            - name: SONNET4_TPM
              value: "${SONNET4_TPM}"
            - name: OPUS4_TPM
              value: "${OPUS4_TPM}"
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - (python3 ./apply_key.py; python -m litellm.db_scripts.create_views) || true
          livenessProbe:
            httpGet:
              path: "/health/liveliness"
              port: "http"
            initialDelaySeconds: 300
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litellm-${LITELLM_NAME}-db
  namespace: crs-webservice
  labels:
    app: litellm-${LITELLM_NAME}-db
    namespace: crs-webservice
spec:
  selector:
    matchLabels:
      app: litellm-${LITELLM_NAME}-db
  template:
    metadata:
      labels:
        app: litellm-${LITELLM_NAME}-db
    spec:
      nodeSelector:
        litellm-${LITELLM_NAME}-node: "true"
      containers:
        - name: postgresql
          image: postgres:17.4-bookworm
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "litellm_user"
            - name: POSTGRES_PASSWORD
              value: "supersecurepassword"
            - name: POSTGRES_DB
              value: "litellm_db"
          volumeMounts:
            - name: litellm-db
              mountPath: /var/lib/postgresql/data
              subPath: ${LITELLM_NAME}
      volumes:
        - name: litellm-db
          persistentVolumeClaim:
            claimName: litellm-db-backup

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: crs-webservice
  name: litellm-${LITELLM_NAME}-redis
  labels:
    app: litellm-${LITELLM_NAME}-redis
    namespace: crs-webservice
spec:
  selector:
    matchLabels:
      app: litellm-${LITELLM_NAME}-redis
  template:
    metadata:
      labels:
        app: litellm-${LITELLM_NAME}-redis
    spec:
      nodeSelector:
        litellm-${LITELLM_NAME}-node: "true"

      containers:
        - name: redis
          image: redis:7.4-bookworm
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: litellm-${LITELLM_NAME}
  namespace: crs-webservice
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    service.beta.kubernetes.io/azure-load-balancer-tcp-idle-timeout: "15" # in minutes
spec:
  ports:
    - name: litellm-${LITELLM_NAME}
      port: 4000
      targetPort: 4000
      protocol: TCP
  selector:
    app: litellm-${LITELLM_NAME}
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: litellm-${LITELLM_NAME}-db
  namespace: crs-webservice
spec:
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: litellm-${LITELLM_NAME}-db

---
apiVersion: v1
kind: Service
metadata:
  name: litellm-${LITELLM_NAME}-redis
  namespace: crs-webservice
spec:
  ports:
    - name: redis
      port: 6379 
      targetPort: 6379 
      protocol: TCP
  selector:
    app: litellm-${LITELLM_NAME}-redis
