// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_test_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_test_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_test_2eproto;
namespace userspace {
class TestRequest;
struct TestRequestDefaultTypeInternal;
extern TestRequestDefaultTypeInternal _TestRequest_default_instance_;
class TestResponse;
struct TestResponseDefaultTypeInternal;
extern TestResponseDefaultTypeInternal _TestResponse_default_instance_;
}  // namespace userspace
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace userspace {

// ===================================================================


// -------------------------------------------------------------------

class TestResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:userspace.TestResponse) */ {
 public:
  inline TestResponse() : TestResponse(nullptr) {}
  ~TestResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestResponse(const TestResponse& from) : TestResponse(nullptr, from) {}
  inline TestResponse(TestResponse&& from) noexcept
      : TestResponse(nullptr, std::move(from)) {}
  inline TestResponse& operator=(const TestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestResponse& operator=(TestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestResponse* internal_default_instance() {
    return reinterpret_cast<const TestResponse*>(
        &_TestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TestResponse& a, TestResponse& b) { a.Swap(&b); }
  inline void Swap(TestResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TestResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestResponse& from) { TestResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "userspace.TestResponse"; }

 protected:
  explicit TestResponse(::google::protobuf::Arena* arena);
  TestResponse(::google::protobuf::Arena* arena, const TestResponse& from);
  TestResponse(::google::protobuf::Arena* arena, TestResponse&& from) noexcept
      : TestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCntFieldNumber = 1,
  };
  // int32 cnt = 1;
  void clear_cnt() ;
  ::int32_t cnt() const;
  void set_cnt(::int32_t value);

  private:
  ::int32_t _internal_cnt() const;
  void _internal_set_cnt(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:userspace.TestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestResponse& from_msg);
    ::int32_t cnt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class TestRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:userspace.TestRequest) */ {
 public:
  inline TestRequest() : TestRequest(nullptr) {}
  ~TestRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestRequest(const TestRequest& from) : TestRequest(nullptr, from) {}
  inline TestRequest(TestRequest&& from) noexcept
      : TestRequest(nullptr, std::move(from)) {}
  inline TestRequest& operator=(const TestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestRequest& operator=(TestRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestRequest* internal_default_instance() {
    return reinterpret_cast<const TestRequest*>(
        &_TestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TestRequest& a, TestRequest& b) { a.Swap(&b); }
  inline void Swap(TestRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TestRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestRequest& from) { TestRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "userspace.TestRequest"; }

 protected:
  explicit TestRequest(::google::protobuf::Arena* arena);
  TestRequest(::google::protobuf::Arena* arena, const TestRequest& from);
  TestRequest(::google::protobuf::Arena* arena, TestRequest&& from) noexcept
      : TestRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTeamNameFieldNumber = 1,
  };
  // string team_name = 1;
  void clear_team_name() ;
  const std::string& team_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_team_name(Arg_&& arg, Args_... args);
  std::string* mutable_team_name();
  PROTOBUF_NODISCARD std::string* release_team_name();
  void set_allocated_team_name(std::string* value);

  private:
  const std::string& _internal_team_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_team_name(
      const std::string& value);
  std::string* _internal_mutable_team_name();

  public:
  // @@protoc_insertion_point(class_scope:userspace.TestRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr team_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TestRequest

// string team_name = 1;
inline void TestRequest::clear_team_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_name_.ClearToEmpty();
}
inline const std::string& TestRequest::team_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:userspace.TestRequest.team_name)
  return _internal_team_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestRequest::set_team_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:userspace.TestRequest.team_name)
}
inline std::string* TestRequest::mutable_team_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_team_name();
  // @@protoc_insertion_point(field_mutable:userspace.TestRequest.team_name)
  return _s;
}
inline const std::string& TestRequest::_internal_team_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.team_name_.Get();
}
inline void TestRequest::_internal_set_team_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_name_.Set(value, GetArena());
}
inline std::string* TestRequest::_internal_mutable_team_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.team_name_.Mutable( GetArena());
}
inline std::string* TestRequest::release_team_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:userspace.TestRequest.team_name)
  return _impl_.team_name_.Release();
}
inline void TestRequest::set_allocated_team_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.team_name_.IsDefault()) {
          _impl_.team_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:userspace.TestRequest.team_name)
}

// -------------------------------------------------------------------

// TestResponse

// int32 cnt = 1;
inline void TestResponse::clear_cnt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cnt_ = 0;
}
inline ::int32_t TestResponse::cnt() const {
  // @@protoc_insertion_point(field_get:userspace.TestResponse.cnt)
  return _internal_cnt();
}
inline void TestResponse::set_cnt(::int32_t value) {
  _internal_set_cnt(value);
  // @@protoc_insertion_point(field_set:userspace.TestResponse.cnt)
}
inline ::int32_t TestResponse::_internal_cnt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cnt_;
}
inline void TestResponse::_internal_set_cnt(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cnt_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace userspace


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_test_2eproto_2epb_2eh
