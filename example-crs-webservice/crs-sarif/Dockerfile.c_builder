#################################################################################
## Build SARIF-BUILDER deps
#################################################################################

FROM ghcr.io/aixcc-finals/base-builder:v1.3.0 AS sarif-builder-builder

RUN apt-get update && \
    apt-get install -y openjdk-21-jdk libssl1.1 curl cargo

# ## CodeQL
# ENV CODEQL_INSTALL_DIR=
# ENV CODEQL_VERSION=v2.21.4

# RUN cd /tmp && \
#     wget https://github.com/github/codeql-cli-binaries/releases/download/$CODEQL_VERSION/codeql-linux64.zip --no-check-certificate && \
#     unzip codeql-linux64.zip && \
#     mv codeql /opt/codeql

## Joern
ENV SBT_DIR=/opt/sbt
ENV POC_GEN_DIR=/app/llm-poc-gen
ENV JOERN_DIR=/opt/joern
COPY joern $JOERN_DIR

RUN cd /tmp && \
    wget https://github.com/sbt/sbt/releases/download/v1.8.0/sbt-1.8.0.zip --no-check-certificate && \
    unzip sbt-1.8.0.zip -d $SBT_DIR && \
    cd $JOERN_DIR && \
    SBT_OPTS="-Xmx12G -XX:+UseG1GC -Dsbt.ci=true" $SBT_DIR/sbt/bin/sbt -DskipTests=true clean update stage

RUN cd $JOERN_DIR/joern-cli && \
    rm -rf frontends/csharpsrc2cpg frontends/javasrc2cpg \
        frontends/ghidra2cpg frontends/gosrc2cpg \
        frontends/jimple2cpg frontends/jssrc2cpg \
        frontends/kotlin2cpg frontends/php2cpg \
        frontends/pysrc2cpg frontends/rubysrc2cpg \
        frontends/swiftsrc2cpg frontends/x2cpg

#################################################################################
## SARIF-BUILDER setup
#################################################################################
FROM ghcr.io/aixcc-finals/base-builder:v1.3.0

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y openjdk-21-jdk libssl1.1 curl cargo

## Git config
RUN git config --global user.email "atlanta@team.com"
RUN git config --global user.name "Team Atlanta"

# ## Copy pre-built CodeQL
# ENV CODEQL_INSTALL_DIR=/opt/codeql

# COPY --from=sarif-builder-builder /opt/codeql $CODEQL_INSTALL_DIR

# RUN ln -s $CODEQL_INSTALL_DIR/codeql /usr/local/bin/codeql

# RUN codeql pack download codeql/java-queries:codeql-java && \
#     codeql pack download codeql/cpp-queries:codeql-cpp && \
#     codeql resolve qlpacks

## Copy pre-built Joern
ENV SBT_DIR=/opt/sbt
ENV POC_GEN_DIR=/app/llm-poc-gen
ENV JOERN_DIR=/opt/joern

COPY --from=sarif-builder-builder /opt/joern $JOERN_DIR

ENV PATH=$PATH:$JOERN_DIR/joern-cli

## Install SVF
ENV LLVM_DIR=/usr/lib/llvm-18/cmake
ENV LLVM_COMPILER=clang
ENV LLVM_CC_NAME=clang
ENV LLVM_CXX_NAME=clang++
ENV LLVM_LINK_NAME=llvm-link-18
ENV CC=clang
ENV CXX=clang++
ENV SVF=/opt/SVF

RUN apt-get update && apt-get install -y build-essential make cmake ninja-build git python3 python3-dev python3-pip autoconf libtool libzstd-dev texinfo bison flex pkg-config wget gawk gnupg lsb-release llvm-18 binutils

# RUN cd /tmp && \
#     wget https://ftp.gnu.org/gnu/binutils/binutils-2.42.tar.gz && \
#     tar xvf binutils-2.42.tar.gz && \
#     cd binutils-2.42 && \
#     mkdir build && \
#     cd build && \
#     ../configure --prefix=/usr/local && \
#     make -j$(nproc) && \
#     make install

## Build SVF
COPY sarif/deps/SVF $SVF
RUN cd $SVF && bash ./build.sh

## Install GLLVM
RUN cd /tmp && \
    wget https://go.dev/dl/go1.24.1.linux-amd64.tar.gz && \
    rm -rf /usr/local/go && tar -C /usr/local -xzf go1.24.1.linux-amd64.tar.gz && \
    export PATH=$PATH:/usr/local/go/bin && \
    go install github.com/SRI-CSL/gllvm/cmd/...@latest

ENV SVF_LIB=$SVF/Release-build/lib
ENV SVF_BIN=$SVF/Release-build/bin
ENV Z3_DIR=$SVF/z3.obj
ENV SVF_src=$SVF
ENV SVF_DIR=$SVF
ENV SVF_HEADER=$LLVM_DIR
ENV PATH=$PATH:/usr/local/go/bin:/root/go/bin:$SVF_BIN
