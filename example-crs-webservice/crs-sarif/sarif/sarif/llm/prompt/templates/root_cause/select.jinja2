<Instruction>
Analyze the given crash location code and examine the surrounding root cause candidate predicates, then determine the predicate most likely to be the root cause based on the analysis.
</Instruction>

<Note>
- "// Root cause candidate (rank: XX, score: XX)" is the root cause candidate predicate with the rank and score generated by the root cause analysis tool.
    - "rank" is the rank of the root cause candidate by root cause analysis tool. lower the better.
    - "score" is the score for ranking the root cause candidate. score is between 0 and 1. higher the better. 
- "// Crash CWE-XXX" is the crash location with inferred CWE.
</Note>

<Approach>
1. Analyze the cause of the crash, examining which variable values influence the crash.
2. Analyze the relationship between the root cause candidates and the crash location, considering factors such as data flow and control flow.
3. Infer whether the identified root cause is the direct cause of the crash based on the analysis.
4. If the identified root cause is determined to be the direct cause of the crash, select it as the final root cause.
5. Note that the root cause is not always the crash location. Since the root cause is the fundamental reason for the crash, it may be located before the crash location in the execution flow.
</Approach>

{{crash_loc.function_name | to_xml("Function_Name") | adjust_indent(0) }}
{{code | to_xml("Crash_Location_Code") | adjust_indent(0) }}