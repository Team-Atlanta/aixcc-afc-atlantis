# DO NOT EDIT THIS FILE.
# This file is automatically generated by `scripts/make_detections.py`

vulnerability_identifier = "custom-jvm-imaging-cpv-2-sarif-only"
project_name = "aixcc/jvm/imaging"
blobs = []
sarif_report = "{\"runs\": [{\"artifacts\": [{\"location\": {\"index\": 0, \"uri\": \"src/main/java/org/apache/commons/imaging/formats/jpeg/segments/PatSegment.java\"}}], \"automationDetails\": {\"id\": \"/\"}, \"conversion\": {\"tool\": {\"driver\": {\"name\": \"GitHub Code Scanning\"}}}, \"results\": [{\"correlationGuid\": \"2bc26b18-b683-4874-be9e-06108b3bf333\", \"level\": \"warning\", \"locations\": [{\"physicalLocation\": {\"artifactLocation\": {\"index\": 0, \"uri\": \"src/main/java/org/apache/commons/imaging/formats/jpeg/segments/PatSegment.java\"}, \"region\": {\"endColumn\": 1, \"endLine\": 103, \"startColumn\": 1, \"startLine\": 69}}}], \"message\": {\"text\": \"This method is vulnerable to XPath injection because the key parameter is directly concatenated into the XPath expression without any input validation or sanitization. An attacker could inject malicious XPath syntax through the key parameter to manipulate the query logic and potentially access unauthorized data from the XML document. The vulnerability stems from the unsafe string concatenation in the line xpath.compile(\\\"//entry[@key='\\\" + key + \\\"']\\\") where user-controlled input is embedded directly into the XPath query.\"}, \"partialFingerprints\": {\"primaryLocationLineHash\": \"a17cbcafe13f3e5d:1\"}, \"properties\": {\"github/alertNumber\": 2, \"github/alertUrl\": \"https://api.github.com/repos/aixcc-afc/cp-user-/code-scanning/alerts/2\"}, \"rule\": {\"id\": \"CWE-643\", \"index\": 0}, \"ruleId\": \"CWE-643\"}], \"tool\": {\"driver\": {\"name\": \"CodeScan++\", \"rules\": [{\"defaultConfiguration\": {\"level\": \"warning\"}, \"fullDescription\": {\"text\": \"The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.\"}, \"helpUri\": \"https://cwe.mitre.org/\", \"id\": \"CWE-643\", \"properties\": {}, \"shortDescription\": {\"text\": \"Improper Neutralization of Data within XPath Expressions ('XPath Injection')\"}}], \"version\": \"1.0.0\"}}, \"versionControlProvenance\": [{\"branch\": \"refs/heads/main\", \"repositoryUri\": \"https://github.com/team-atlanta/cp-java-imaging-source\", \"revisionId\": \"5eb261eb808c0f217cb3e20f27205e7a08ab0b31\"}]}], \"$schema\": \"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json\", \"version\": \"2.1.0\"}"

[mode]
type = "full"
base_ref = "49903d8ea6bf0f016dbf4d528cf72ec602938fb6"
