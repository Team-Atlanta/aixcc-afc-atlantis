# DO NOT EDIT THIS FILE.
# This file is automatically generated by `scripts/make_detections.py`

vulnerability_identifier = "custom-c-libtiff-cpv-2-sarif-only"
project_name = "aixcc/c/libtiff"
blobs = []
sarif_report = "{\"runs\": [{\"artifacts\": [{\"location\": {\"index\": 0, \"uri\": \"libtiff/tif_getimage.c\"}}], \"automationDetails\": {\"id\": \"/\"}, \"conversion\": {\"tool\": {\"driver\": {\"name\": \"GitHub Code Scanning\"}}}, \"results\": [{\"correlationGuid\": \"2bc26b18-b683-4874-be9e-06108b3bf333\", \"level\": \"warning\", \"locations\": [{\"physicalLocation\": {\"artifactLocation\": {\"index\": 0, \"uri\": \"libtiff/tif_getimage.c\"}, \"region\": {\"endColumn\": 1, \"endLine\": 2964, \"startColumn\": 1, \"startLine\": 2920}}}], \"message\": {\"text\": \"The vulnerability occurs when row is greater than img.height, causing an integer underflow in the calculation rows_to_read = img.height - row. Since rows_to_read is an unsigned integer (uint32_t), the negative result wraps around to become an extremely large value (approximately 4.3 billion). This massive value is then used in subsequent memmove operations, leading to out-of-bounds memory access and ultimately causing a segmentation fault.\"}, \"partialFingerprints\": {\"primaryLocationLineHash\": \"a17cbcafe13f3e5d:1\"}, \"properties\": {\"github/alertNumber\": 2, \"github/alertUrl\": \"https://api.github.com/repos/aixcc-afc/cp-user-/code-scanning/alerts/2\"}, \"rule\": {\"id\": \"CWE-191\", \"index\": 0}, \"ruleId\": \"CWE-191\"}], \"tool\": {\"driver\": {\"name\": \"CodeScan++\", \"rules\": [{\"defaultConfiguration\": {\"level\": \"warning\"}, \"fullDescription\": {\"text\": \"The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.\"}, \"helpUri\": \"https://cwe.mitre.org/\", \"id\": \"CWE-191\", \"properties\": {}, \"shortDescription\": {\"text\": \" Integer Underflow (Wrap or Wraparound)\"}}], \"version\": \"1.0.0\"}}, \"versionControlProvenance\": [{\"branch\": \"refs/heads/main\", \"repositoryUri\": \"https://github.com/team-atlanta/cp-c-libtiff\", \"revisionId\": \"5eb261eb808c0f217cb3e20f27205e7a08ab0b31\"}]}], \"$schema\": \"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json\", \"version\": \"2.1.0\"}"

[mode]
type = "full"
base_ref = "22365519b44bc49f9de15d7b2c6fcf6cfa11455d"
