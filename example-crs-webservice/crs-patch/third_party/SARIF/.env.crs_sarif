# CRS settings
## VAPI settings
VAPI_HOST=
## For libCRS (WIP, same as PROJECT_NAME??)
CRS_TARGET=
## SARIF Redis settings
CRS_SARIF_REDIS_URL=redis://redis:6379
## CRSf mode (debug, release)
CRS_MODE=debug

# Sarif package settings
## Build directory copied from BUILD_SHARED_DIR (codeql, joern, SVF)
BUILD_DIR=
## Output directory produced by sarif package
OUT_DIR=
## Source directory extracted from tarballs
SRC_DIR=

# CP settings
PROJECT_NAME=
PROJECT_LANGUAGE=
## Directory that contains .aixcc/config.yaml for libCRS
CP_PROJ_PATH=
CP_SRC_PATH=

# Per CP settings
## Shared root directory
SHARED_ROOT_DIR=
## Tarball directory
TARBALL_DIR=
## Multilang-Build directory
MULTILANG_BUILD_DIR=
## Shared directory of sarif-builder output at cp-manager (READ-ONLY)
BUILD_SHARED_DIR=
## Shared directory of coverage data of crs-multilang (READ-ONLY)
COVERAGE_SHARED_DIR=
## Shared directory of corpus of all crs (READ-ONLY)
CORPUS_SHARED_DIR=
## Shared directory of dynamic coverage enhanced reachability results (READ/WRITE)
REACHABILITY_SHARED_DIR=$SHARED_ROOT_DIR/reachability
## Shared directory of function call traces (READ/WRITE)
CALL_TRACE_SHARED_DIR=$SHARED_ROOT_DIR/call_trace

# Language-specific settings
## CRS-java settings (for jar files of java projects. see https://github.com/Team-Atlanta/CRS-java/blob/main/crs/cpmetadata.py)
JAVA_CP_METADATA_PATH=

# OSS-fuzz settings
# OSS_FUZZ_DIR=
SANITIZER=
FUZZING_ENGINE=libfuzzer
HELPER=True
FUZZING_LANGUAGE=
