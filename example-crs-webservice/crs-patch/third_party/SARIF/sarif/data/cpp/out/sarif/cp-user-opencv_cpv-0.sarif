{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Atlantis",
          "version": "1.0.0",
          "notifications": [],
          "rules": [
            {
              "id": "no-crashes",
              "shortDescription": {
                "text": "Don't crash"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/416.html",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "heap-use-after-free",
              "shortDescription": {
                "text": "Use of a heap-object after it has been freed."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/416.html",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "heap-buffer-overflow",
              "shortDescription": {
                "text": "A read or write past the end of a heap buffer."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/122.html",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "stack-buffer-overflow",
              "shortDescription": {
                "text": "A read or write past the end of a stack buffer."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/121.html",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "global-buffer-overflow",
              "shortDescription": {
                "text": "A read or write past the end of a global buffer."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/121.html",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "stack-use-after-return",
              "shortDescription": {
                "text": "A stack-based variable has been used after the function returned."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/562.html",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "stack-use-after-scope",
              "shortDescription": {
                "text": "A stack-based variable has been used outside of the scope in which it exists."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/562.html",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "initialization-order-fiasco",
              "shortDescription": {
                "text": "Problem with order of initialization of global objects."
              },
              "helpUri": "https://isocpp.org/wiki/faq/ctors#static-init-order",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "direct-leak",
              "shortDescription": {
                "text": "Memory is leaked."
              },
              "helpUri": "https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            },
            {
              "id": "indirect-leak",
              "shortDescription": {
                "text": "Memory is leaked."
              },
              "helpUri": "https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer",
              "relationships": [],
              "properties": {
                "tags": [],
                "category": "Crashes"
              }
            }
          ],
          "taxa": [],
          "locations": [],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false,
          "supportedTaxonomies": []
        },
        "extensions": []
      },
      "invocations": [
        {
          "commandLine": "",
          "startTimeUtc": "2025-03-11T23:30:07.190624Z",
          "ruleConfigurationOverrides": [],
          "notificationConfigurationOverrides": [],
          "toolExecutionNotifications": [],
          "toolConfigurationNotifications": [],
          "executionSuccessful": true
        }
      ],
      "language": "en-US",
      "versionControlProvenance": [],
      "logicalLocations": [],
      "graphs": [],
      "results": [
        {
          "ruleId": "SEGV",
          "ruleIndex": -1,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "AddressSanitizer: SEGV /src/cp-user-opencv-src/modules/objdetect/src/cascadedetect.hpp:515:20 in int cv::predictOrdered<cv::HaarEvaluator>(cv::CascadeClassifierImpl&, cv::Ptr<cv::FeatureEvaluator>&, double&)",
            "arguments": []
          },
          "locations": [
            {
              "id": -1,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/src/cp-user-opencv-src/modules/objdetect/src/cascadedetect.hpp",
                  "index": -1
                },
                "region": {
                  "startLine": 515,
                  "startColumn": 20,
                  "charOffset": -1,
                  "byteOffset": -1
                }
              },
              "logicalLocations": [
                {
                  "name": "int",
                  "index": -1,
                  "parentIndex": -1,
                  "kind": "function"
                }
              ],
              "annotations": [],
              "relationships": []
            }
          ],
          "stacks": [],
          "codeFlows": [],
          "graphs": [],
          "graphTraversals": [],
          "relatedLocations": [],
          "rank": -1.0,
          "attachments": [],
          "fixes": [],
          "taxa": []
        }
      ],
      "runAggregates": [],
      "redactionTokens": [],
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "threadFlowLocations": [],
      "taxonomies": [],
      "addresses": [],
      "translations": [],
      "policies": [],
      "webRequests": [],
      "webResponses": []
    }
  ]
}