{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Atlantis",
          "version": "1.0.0",
          "rules": [
            {
              "id": "no-crashes",
              "shortDescription": {
                "text": "Don't crash"
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/416.html",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "heap-use-after-free",
              "shortDescription": {
                "text": "Use of a heap-object after it has been freed."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/416.html",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "heap-buffer-overflow",
              "shortDescription": {
                "text": "A read or write past the end of a heap buffer."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/122.html",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "stack-buffer-overflow",
              "shortDescription": {
                "text": "A read or write past the end of a stack buffer."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/121.html",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "global-buffer-overflow",
              "shortDescription": {
                "text": "A read or write past the end of a global buffer."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/121.html",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "stack-use-after-return",
              "shortDescription": {
                "text": "A stack-based variable has been used after the function returned."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/562.html",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "stack-use-after-scope",
              "shortDescription": {
                "text": "A stack-based variable has been used outside of the scope in which it exists."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/562.html",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "initialization-order-fiasco",
              "shortDescription": {
                "text": "Problem with order of initialization of global objects."
              },
              "helpUri": "https://isocpp.org/wiki/faq/ctors#static-init-order",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "direct-leak",
              "shortDescription": {
                "text": "Memory is leaked."
              },
              "helpUri": "https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer",
              "properties": {
                "category": "Crashes"
              }
            },
            {
              "id": "indirect-leak",
              "shortDescription": {
                "text": "Memory is leaked."
              },
              "helpUri": "https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer",
              "properties": {
                "category": "Crashes"
              }
            }
          ]
        }
      },
      "invocations": [
        {
          "commandLine": "",
          "startTimeUtc": "2025-04-22T05:40:25.870236Z",
          "executionSuccessful": true
        }
      ],
      "results": [
        {
          "ruleId": "heap-buffer-overflow",
          "level": "error",
          "message": {
            "text": "AddressSanitizer: heap-buffer-overflow /src/nginx/src/core/ngx_string.c:1330:14 in ngx_decode_base64_internal"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/src/nginx/src/core/ngx_string.c"
                },
                "region": {
                  "startLine": 1330,
                  "startColumn": 14
                }
              },
              "logicalLocations": [
                {
                  "name": "ngx_decode_base64_internal",
                  "kind": "function"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}