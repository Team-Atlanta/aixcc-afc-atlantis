--- a/fs/fs_context.c
+++ b/fs/fs_context.c
@@ -559,7 +559,7 @@
 
 	switch (param->type) {
 	case fs_value_is_string:
-		len = 1 + param->size;
+		len = 1 + param->size; /* 1 accounts for '=' */
 		fallthrough;
 	case fs_value_is_flag:
 		len += strlen(param->key);
@@ -569,13 +569,21 @@
 			      param->key);
 	}
 
-	if (len > PAGE_SIZE - 2 - size)
-		return invalf(fc, "VFS: Legacy: Cumulative options too large");
+	/* Fix: Account for comma (if size != 0) and trailing null */
+	if (size) {
+		if (len + 2 > PAGE_SIZE - size)
+			return invalf(fc, "VFS: Legacy: Cumulative options too large");
+	} else {
+		if (len + 1 > PAGE_SIZE - size)
+			return invalf(fc, "VFS: Legacy: Cumulative options too large");
+	}
+
 	if (strchr(param->key, ',') ||
 	    (param->type == fs_value_is_string &&
 	     memchr(param->string, ',', param->size)))
 		return invalf(fc, "VFS: Legacy: Option '%s' contained comma",
 			      param->key);
+
 	if (!ctx->legacy_data) {
 		ctx->legacy_data = kmalloc(PAGE_SIZE, GFP_KERNEL);
 		if (!ctx->legacy_data)
