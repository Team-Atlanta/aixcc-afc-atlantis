#!/bin/bash -eu
# Copyright 2020 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

path=$1
function=$2
fuzzer=$3
tags="-tags gofuzz"
if [[ $#  -eq 4 ]]; then
  tags="-tags $4"
fi

SCRIPT_DIR=$(dirname "$(realpath "$0")")

if [ ! -d "out" ]; then
    mkdir out
else
    echo "out folder already exists. Skipping create folder."
fi

# makes directory change temporary
(
cd $GOPATH/src/$path || true
# in the case we are in the right directory, with go.mod but no go.sum
if [ ! -f "go.mod" ]; then
    go mod init $path
else
    echo "go.mod already exists"
fi
go mod tidy || true
# project was downloaded with go get if go list fails
go list $tags $path || { cd $GOPATH/pkg/mod/ && cd `echo $path | cut -d/ -f1-3 | awk '{print $1"@*"}'`; } || cd -
# project does not have go.mod if go list fails again
go list $tags $path || { go mod init $path && go mod tidy ;}

# Compile and instrument all Go files relevant to this fuzz target.
echo "Running go-fuzz $tags -func $function -o $fuzzer.a $path"
go-fuzz $tags -func $function -o $fuzzer.a $path

CXX=clang++
CXXFLAGS="-O1   -fno-omit-frame-pointer   -gline-tables-only   -Wno-error=enum-constexpr-conversion   -Wno-error=incompatible-function-pointer-types   -Wno-error=int-conversion   -Wno-error=deprecated-declarations   -Wno-error=implicit-function-declaration   -Wno-error=implicit-int   -Wno-error=vla-cxx-extension   -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -stdlib=libc++ -g"
LIB_FUZZING_ENGINE=$SCRIPT_DIR/libclang_rt.fuzzer.a
OUT=$SCRIPT_DIR/../out

# Link Go code ($fuzzer.a) with fuzzing engine to produce fuzz target binary.
echo "$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $fuzzer.a -o $OUT/$fuzzer"
$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $fuzzer.a -o $OUT/$fuzzer
)
