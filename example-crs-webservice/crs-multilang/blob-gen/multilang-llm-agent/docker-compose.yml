services:
  phoenix:
    image: arizephoenix/phoenix:latest
    depends_on:
      - db
    ports:
      - "6006:6006"  # UI and OTLP HTTP collector
      # - "4317:4317"  # OTLP gRPC collector
    cpus: "4"
    mem_limit: "20G"
    environment:
      - PHOENIX_SQL_DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432
    volumes:
      - ./phoenix_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "127.0.0.1:6379:6379"
      - "172.17.0.1:6379:6379"
    volumes:
      - ./redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #     args:
  #       OPENAI_API_KEY: ${OPENAI_API_KEY}
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - COLLECTOR_ENDPOINT=http://phoenix:6006/v1/traces
  #     - PROD_CORS_ORIGIN=http://localhost:3000
  #     # Set INSTRUMENT_LLAMA_INDEX=false to disable instrumentation
  #     - INSTRUMENT_LLAMA_INDEX=true
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "http://0.0.0.0:8000/api/chat/healthcheck"]
  #     interval: 5s
  #     timeout: 1s
  #     retries: 5
  # frontend:
  #   build: frontend
  #   ports:
  #     - "3000:3000"
  #   # depends_on:
  #   #   backend:
  #   #     condition: service_healthy
