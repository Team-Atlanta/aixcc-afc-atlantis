description: |-
  Classes or native libraries loaded with user-controlled names.

  Find: Class.forName() or System.loadLibrary() using user input, including ClassLoader variants.
  ```java
  String className = request.getParameter("class");
  Class.forName(className);  // BUG: arbitrary class loading
  String libName = getLibraryName();
  System.loadLibrary(libName);  // BUG: arbitrary library loading

  // ClassLoader variants
  ClassLoader.getSystemClassLoader().loadClass(className);  // BUG: ClassLoader method
  Thread.currentThread().getContextClassLoader().loadClass(className);  // BUG: context loader

  // With initialization
  Class.forName(className, true, classLoader);  // BUG: with initialization flag
  ```

exploit: |-
  1. Locate dynamic loading with user input
  2. Load EXACT target class/library
    - class name: jaz.Zer
    - library name: jazzer_honeypot

  ```java
  Class.forName("jaz.Zer");  // Exact class name required
  // OR
  System.loadLibrary("jazzer_honeypot");  // Exact library name required
  // OR
  ClassLoader.getSystemClassLoader().loadClass("jaz.Zer");  // ClassLoader variant
  ```
