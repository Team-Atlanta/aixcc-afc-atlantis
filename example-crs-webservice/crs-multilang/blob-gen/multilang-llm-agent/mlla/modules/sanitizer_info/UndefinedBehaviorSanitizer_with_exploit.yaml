IntegerOverflow:
  description: |-
    Integer arithmetic exceeding type limits or causing truncation.

    Look for: Arithmetic operations that can overflow, type conversions.
    ```c
    int x = INT_MAX;
    x = x + 1;  // BUG: signed integer overflow

    long big = 1000000;
    int small = big;  // BUG: implicit truncation
    ```

  exploit: |-
    1. Find arithmetic near type limits
    2. Trigger overflow calculation

    ```c
    int result = INT_MAX + 1;  // Triggers signed integer overflow
    ```

InvalidPointerOperation:
  description: |-
    Misaligned pointer access or invalid pointer arithmetic.

    Look for: Unaligned memory access, invalid pointer arithmetic.
    ```c
    int* ip = (int*)1;  // Misaligned address
    *ip = 42;  // BUG: misaligned pointer use

    char* base = malloc(10);
    char* end = base + SIZE_MAX;  // BUG: pointer overflow
    *end = 'A';
    ```

  exploit: |-
    1. Find pointer operations
    2. Trigger misaligned access

    ```c
    int* ptr = (int*)1;  // Misaligned address
    *ptr = 42;  // Triggers misaligned pointer use
    ```

InvalidShiftOperation:
  description: |-
    Bit shifts with invalid amounts.

    Look for: Shift amount >= type width or negative.
    ```c
    int x = 1;
    int result = x << 32;  // BUG: shift >= width (32-bit int)

    int result2 = x << -1;  // BUG: negative shift
    ```

  exploit: |-
    1. Find bit shift operations
    2. Provide invalid shift amount

    ```c
    int result = 1 << 32;  // Triggers invalid shift
    ```

TypeMismatch:
  description: |-
    Function calls with incompatible types.

    Look for: Function pointer casts, type confusion.
    ```c
    void func(float f) { }
    void (*ptr)(int) = (void(*)(int))func;  // BUG: type mismatch
    ptr(42);  // Calls with wrong signature
    ```

  exploit: |-
    1. Find function pointer casts
    2. Trigger mismatched call

    ```c
    void func(float f) { }
    void (*ptr)(int) = (void(*)(int))func;
    ptr(42);  // Triggers function type mismatch
    ```

InvalidCast:
  description: |-
    Type casts resulting in invalid values.

    Look for: Float overflow casts, invalid bool/enum values.
    ```c
    float f = 1e40;
    int i = (int)f;  // BUG: float cast overflow

    int x = 2;
    bool b = *(bool*)&x;  // BUG: invalid bool (not 0 or 1)
    ```

  exploit: |-
    1. Find type casting operations
    2. Trigger invalid cast

    ```c
    float big = 1e40;
    int result = (int)big;  // Triggers float cast overflow
    ```

UnreachableCode:
  description: |-
    Functions missing return statements.

    Look for: Functions without return on all paths.
    ```c
    int func() {
        if (condition) {
            return 42;
        }
        // BUG: missing return for else case
    }
    ```

  exploit: |-
    1. Find function with missing return
    2. Trigger path without return

    ```c
    int func(int x) {
        if (x > 0) return 1;
        // Missing return - triggers missing return
    }
    int result = func(-1);
    ```
